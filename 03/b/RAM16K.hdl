// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(
        in=load,
        a=load1,
        b=load2,
        c=load3,
        d=load4,
        sel[0..1]=address[0..1]
    );
    RAM4K(in=in,out=out1,address=address[2..13],load=load1);
    RAM4K(in=in,out=out2,address=address[2..13],load=load2);
    RAM4K(in=in,out=out3,address=address[2..13],load=load3);
    RAM4K(in=in,out=out4,address=address[2..13],load=load4);
    Mux8Way16(
        a=out1,
        b=out2,
        c=out3,
        d=out4,
        sel[0..1]=address[0..1],
        out=out
    );
}